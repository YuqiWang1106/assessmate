# Generated by Django 5.1.7 on 2025-04-11 19:11

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('finished', 'Finished')], default='draft', max_length=10)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('results_released', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('course_number', models.CharField(max_length=20, unique=True)),
                ('course_name', models.CharField(max_length=100)),
                ('course_semester', models.CharField(max_length=20)),
                ('course_year', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('likert', 'Likert Scale'), ('open', 'Open-ended')], max_length=10)),
                ('content', models.TextField()),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.course'),
        ),
        migrations.CreateModel(
            name='CourseMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.course')),
                ('user', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to='my_app.user')),
            ],
            options={
                'unique_together': {('course', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_app.user'),
        ),
        migrations.CreateModel(
            name='AssessmentResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answers', models.JSONField()),
                ('last_saved', models.DateTimeField(auto_now=True)),
                ('submitted', models.BooleanField(default=False)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses_given', to='my_app.user')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses_received', to='my_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnalysisCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=10)),
                ('summary', models.TextField()),
                ('analysis', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessmentquestion')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.team')),
            ],
            options={
                'unique_together': {('team', 'assessment', 'question')},
            },
        ),
        migrations.CreateModel(
            name='TeamAssessmentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.FloatField()),
                ('keywords', models.JSONField()),
                ('summary', models.TextField()),
                ('suggestions', models.TextField()),
                ('radar_scores', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.team')),
            ],
            options={
                'unique_together': {('team', 'assessment')},
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('course_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.coursemember')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.team')),
            ],
            options={
                'unique_together': {('team', 'course_member')},
            },
        ),
        migrations.CreateModel(
            name='OpenEndedToneAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tone_feedback', models.TextField()),
                ('rewritten_answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessmentquestion')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tone_given', to='my_app.user')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tone_received', to='my_app.user')),
            ],
            options={
                'unique_together': {('assessment', 'question', 'from_user', 'to_user')},
            },
        ),
    ]
